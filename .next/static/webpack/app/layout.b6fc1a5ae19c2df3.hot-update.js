"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_BASE: function() { return /* binding */ API_BASE; },\n/* harmony export */   apiService: function() { return /* binding */ apiService; },\n/* harmony export */   generateStory: function() { return /* binding */ generateStory; },\n/* harmony export */   submitManualTranscript: function() { return /* binding */ submitManualTranscript; },\n/* harmony export */   uploadTranscriptFile: function() { return /* binding */ uploadTranscriptFile; }\n/* harmony export */ });\n/**\n * API service for Video Caption Generator - Next.js Frontend\n */ const API_BASE = \"http://localhost:8000\";\nclass ApiService {\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseUrl).concat(endpoint);\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers\n            },\n            ...options\n        };\n        try {\n            const response = await fetch(url, config);\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.error || \"HTTP error! status: \".concat(response.status));\n            }\n            return data;\n        } catch (error) {\n            console.error(\"API request failed:\", error);\n            throw error;\n        }\n    }\n    // Health check\n    async healthCheck() {\n        return this.request(\"/health\");\n    }\n    // Video operations\n    async getVideos() {\n        let directory = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \".\";\n        return this.request(\"/videos?directory=\".concat(encodeURIComponent(directory)));\n    }\n    async getVideoStatus() {\n        let directory = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \".\";\n        return this.request(\"/videos/status?directory=\".concat(encodeURIComponent(directory)));\n    }\n    // Caption operations\n    async generateCaptions() {\n        let directory = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \".\", template = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"ai_tech\";\n        return this.request(\"/captions/generate\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                directory,\n                template\n            })\n        });\n    }\n    async regenerateCaption(videoTitle) {\n        let template = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"ai_tech\";\n        return this.request(\"/captions/regenerate\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                video_title: videoTitle,\n                template\n            })\n        });\n    }\n    async deleteCaption(videoTitle) {\n        return this.request(\"/captions/delete\", {\n            method: \"DELETE\",\n            body: JSON.stringify({\n                video_title: videoTitle\n            })\n        });\n    }\n    async listCaptions() {\n        return this.request(\"/captions/list\");\n    }\n    // Utility operations\n    async cleanupOrphaned() {\n        let directory = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \".\";\n        return this.request(\"/cleanup\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                directory\n            })\n        });\n    }\n    // YouTube operations\n    async getYouTubeAuthStatus() {\n        return this.request(\"/youtube/auth/status\");\n    }\n    async uploadToYouTube(videoTitle, caption) {\n        return this.request(\"/youtube/upload\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                video_title: videoTitle,\n                caption\n            })\n        });\n    }\n    async getYouTubeUploads() {\n        return this.request(\"/youtube/uploads\");\n    }\n    async revokeYouTubeAuth() {\n        return this.request(\"/youtube/auth/revoke\", {\n            method: \"POST\"\n        });\n    }\n    async initiateYouTubeAuth() {\n        return this.request(\"/youtube/auth/initiate\", {\n            method: \"POST\"\n        });\n    }\n    // Chat operations\n    async sendChatMessage(message, hint) {\n        return this.request(\"/chat\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                message,\n                hint\n            })\n        });\n    }\n    // Transcript operations\n    async uploadTranscript(file) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        return fetch(\"\".concat(this.baseUrl, \"/transcript/upload\"), {\n            method: \"POST\",\n            body: formData\n        }).then((response)=>response.json());\n    }\n    async uploadTranscriptFile(file) {\n        return this.uploadTranscript(file);\n    }\n    async submitManualTranscript(transcript) {\n        const formData = new FormData();\n        formData.append(\"text\", transcript);\n        return fetch(\"\".concat(this.baseUrl, \"/transcript/manual\"), {\n            method: \"POST\",\n            body: formData\n        }).then((response)=>response.json());\n    }\n    async generateStory(transcript) {\n        return this.request(\"/story/generate\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                text: transcript\n            })\n        });\n    }\n    constructor(){\n        this.baseUrl = \"\".concat(API_BASE, \"/api\");\n    }\n}\n// Create and export instance\nconst apiService = new ApiService();\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiService);\n// Export individual functions for convenience\nconst generateStory = (transcript)=>apiService.generateStory(transcript);\nconst uploadTranscriptFile = (file)=>apiService.uploadTranscriptFile(file);\nconst submitManualTranscript = (transcript)=>apiService.submitManualTranscript(transcript);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});